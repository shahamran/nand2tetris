function iCopter.new 0
push constant 6
call Memory.alloc 1
pop pointer 0
push constant 0
pop this 2
push constant 3
pop this 5
push constant 0
pop this 3
push constant 0
pop this 4
push constant 20
push constant 100
push constant 10
call Copter.new 3
pop this 0
push constant 100
push constant 30
push constant 50
push this 5
call Gate.new 4
pop this 1
push pointer 0
return
function iCopter.dispose 0
push argument 0
pop pointer 0
push this 0
call Copter.dispose 1
pop temp 0
push this 1
call Gate.dispose 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function iCopter.checkClash 6
push argument 0
pop pointer 0
push this 0
call Copter.getX 1
pop local 0
push this 0
call Copter.getY 1
pop local 1
push this 0
call Copter.getSize 1
pop local 2
push this 1
call Gate.getPos 1
pop local 3
push this 1
call Gate.getHeight 1
pop local 4
push this 1
call Gate.getGap 1
pop local 5
push local 0
push local 2
add
push local 3
gt
push local 0
push local 3
lt
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 1
push local 4
lt
push local 1
push local 2
add
push local 4
push local 5
add
gt
or
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
not
return
label IF_FALSE1
label IF_FALSE0
push constant 0
return
function iCopter.run 1
push argument 0
pop pointer 0
label WHILE_EXP0
push this 2
not
not
if-goto WHILE_END0
label WHILE_EXP1
push local 0
push constant 0
eq
not
if-goto WHILE_END1
call Keyboard.keyPressed 0
pop local 0
push pointer 0
call iCopter.moveCopter 1
pop temp 0
goto WHILE_EXP1
label WHILE_END1
push local 0
push constant 81
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
pop this 2
label IF_FALSE0
push local 0
push constant 32
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 10
pop this 3
label IF_FALSE1
push local 0
push constant 80
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
label IF_FALSE2
label WHILE_EXP2
push local 0
push constant 0
eq
not
not
if-goto WHILE_END2
call Keyboard.keyPressed 0
pop local 0
push pointer 0
call iCopter.moveCopter 1
pop temp 0
goto WHILE_EXP2
label WHILE_END2
goto WHILE_EXP0
label WHILE_END0
call Screen.clearScreen 0
pop temp 0
push constant 3
push constant 10
call Output.moveCursor 2
pop temp 0
push constant 10
call String.new 1
push constant 71
call String.appendChar 2
push constant 97
call String.appendChar 2
push constant 109
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 79
call String.appendChar 2
push constant 118
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 33
call String.appendChar 2
call Output.printString 1
pop temp 0
call Output.println 0
pop temp 0
push constant 15
call String.new 1
push constant 89
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 117
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 115
call String.appendChar 2
push constant 99
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 105
call String.appendChar 2
push constant 115
call String.appendChar 2
push constant 58
call String.appendChar 2
push constant 32
call String.appendChar 2
call Output.printString 1
pop temp 0
push this 4
call Output.printInt 1
pop temp 0
push constant 11
call String.new 1
push constant 32
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 33
call String.appendChar 2
push constant 33
call String.appendChar 2
push constant 33
call String.appendChar 2
push constant 33
call String.appendChar 2
push constant 33
call String.appendChar 2
push constant 33
call String.appendChar 2
push constant 33
call String.appendChar 2
push constant 33
call String.appendChar 2
call Output.printString 1
pop temp 0
push constant 0
return
function iCopter.moveCopter 3
push argument 0
pop pointer 0
push this 2
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push pointer 0
call iCopter.checkClash 1
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
not
pop this 2
push constant 0
return
label IF_FALSE1
push this 3
push constant 0
gt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 3
push constant 1
sub
pop this 3
push this 0
call Copter.setJump 1
pop temp 0
label IF_FALSE2
push this 0
call Copter.move 1
pop temp 0
push this 0
call Copter.isInScreen 1
pop local 1
push local 1
not
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 0
not
pop this 2
push constant 0
return
label IF_FALSE3
push this 1
call Gate.move 1
pop local 0
push local 0
not
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push this 5
push constant 1
add
pop this 5
push this 1
call Gate.getHeight 1
push constant 43
add
push this 1
call Gate.getGap 1
add
pop local 2
push local 2
push constant 255
gt
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push local 2
push constant 256
sub
pop local 2
label IF_FALSE5
push this 1
call Gate.dispose 1
pop temp 0
push local 2
push constant 30
push constant 50
push this 5
call Gate.new 4
pop this 1
push this 4
push constant 1
add
pop this 4
label IF_FALSE4
push constant 15
call Sys.wait 1
pop temp 0
push constant 0
return
